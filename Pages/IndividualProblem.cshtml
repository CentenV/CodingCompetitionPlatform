@page "/problem"
@using CodingCompetitionPlatform.Services
@model CodingCompetitionPlatform.Pages.ProblemModel
@{
    // Making sure that problems are initialized
    LoadProblems.Initialize();
    var currentProblem = LoadProblems.PROBLEMS[Model.problemIndex - 1];
}

<!-- PROBLEM INFO AND UPLOAD -->
<div id="problem-container">
    <div id="problem-info-container">
        <div id="problem-header">
            <span id="problem-title">@currentProblem.name</span>
            <div id="problem-details">
                <div>Problem @currentProblem.problemIndex</div>
                <div>@currentProblem.runCases run cases, @currentProblem.testCases test cases</div>
            </div>
        </div>
        <div id="problem-detail-description">
            <p>@currentProblem.description</p>
        </div>
    </div>

    <div id="problem-submission-container">

    </div>
    <form method="post" enctype="multipart/form-data">
        <input type="file" asp-for="uploadedFile" accept=".py" />
        <input type="submit" />
    </form>

    <div>@Model.error</div>

    <div id="code-output" class="code">@Model.status</div>
</div>


<!-- CODE RESULTS SECTION (whether test case passed or fail) -->
@if (Model.displayCasesStatus && (Model.runCasesAllOutput != null) && (Model.testCasesAllOutput != null))
{
    <div id="results-container">
        <!-- Code for Results Tabs -->
        <script>
            function displayExecutedCase(event, displayName) {
                // Hide Items
                tabContent = document.getElementsByClassName("result-tab-content");
                console.log(tabContent.length);
                for (let i = 0; i < tabContent.length; i++) {
                    tabContent[i].style.display = "none";
                }
                // Set Active Tab In Bar
                tabOptions = document.getElementsByClassName("report-tab-option");
                for (let i = 0; i < tabOptions.length; i++) {
                    tabOptions[i].className = tabOptions[i].className.replace(" active", "");
                }
                // Show Items
                document.getElementById(displayName).style.display = "block";
                event.currentTarget.className += " active";
            }
        </script>

        <div id="code-report">
            <!-- Initialize Case Header Selection -->
            <div id="result-report-tab-bar">
                @for (int i = 0; i < currentProblem.runCases; i++)
                {
                    string contentDisplayName = $"runcase{i + 1}";
                    @if (Model.runCasesAllOutput.ElementAt(i).Value == true)
                    {
                        <button class="report-tab-option problem-passed" onclick="displayExecutedCase(event, '@contentDisplayName')">Run Case @(i + 1)</button>
                    }
                    else
                    {
                        <button class="report-tab-option problem-failed" onclick="displayExecutedCase(event, '@contentDisplayName')">Run Case @(i + 1)</button>
                    }
                }
                @for (int i = 0; i < currentProblem.testCases; i++)
                {
                    string contentDisplayName = $"testcase{i + 1}";
                    @if (Model.testCasesAllOutput.ElementAt(i).Value == true)
                    {
                        <button class="report-tab-option problem-passed" onclick="displayExecutedCase(event, '@contentDisplayName')">Test Case @(i + 1)</button>
                    }
                    else
                    {
                        <button class="report-tab-option problem-failed" onclick="displayExecutedCase(event, '@contentDisplayName')">Test Case @(i + 1)</button>
                    }
                }
            </div>

            <!-- Case Content -->
            <div id="result-output-content">
                @for (int i = 0; i < currentProblem.runCases; i++)
                {
                    string contentDisplayName = $"runcase{i + 1}";
                    <div class="result-tab-content" id="@contentDisplayName">
                        @if (Model.runCasesAllOutput.ElementAt(i).Value == true)
                        {
                            <div class="status-text passed">Run Case PASSED</div>
                        }
                        else
                        {
                            <div class="status-text failed">Run Case FAILED</div>
                        }
                        <div class="actual-output-container">
                            <span class="output-tag">Actual Output</span>
                            <div class="code runcase-expected-output">@Model.runCasesAllOutput.ElementAt(i).Key.Key</div>
                        </div>
                        <div class="expected-output-container">
                            <span class="output-tag">Expected Output</span>
                            <div class="code testcase-expected-output">@Model.runCasesAllOutput.ElementAt(i).Key.Value</div>
                        </div>
                        <div class="case-identifier">Run Case @(i + 1)</div>
                    </div>
                }
                @for (int i = 0; i < currentProblem.testCases; i++)
                {
                    string contentDisplayName = $"testcase{i + 1}";
                    <div class="result-tab-content" id="@contentDisplayName">
                        @if (Model.testCasesAllOutput.ElementAt(i).Value == true)
                        {
                            <div class="status-text passed">Test Case PASSED</div>
                        }
                        else
                        {
                            <div class="status-text failed">Test Case FAILED</div>
                        }
                        <div class="actual-output-container">
                            <span class="output-tag">Actual Output</span>
                            <div class="code runcase-expected-output">@Model.testCasesAllOutput.ElementAt(i).Key.Key</div>
                        </div>
                        <div class="expected-output-container">
                            <span class="output-tag">Expected Output</span>
                            <div class="code testcase-expected-output">@Model.testCasesAllOutput.ElementAt(i).Key.Value</div>
                        </div>
                        <div class="case-identifier">Test Case @(i + 1)</div>
                    </div>
                }
            </div>
        </div>
    </div>
}